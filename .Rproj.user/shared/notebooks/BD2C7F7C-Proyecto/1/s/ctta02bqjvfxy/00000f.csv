"0","set.seed(1234)"
"0","suppressWarnings({"
"0","gbm_model <- train("
"0","    V16 ~ .,                      "
"0","    data = credit.Datos.Train.gbm,"
"0","    method = ""gbm"","
"0","    trControl = control,"
"0","    tuneLength = 5,"
"0","    verbose = FALSE              "
"0",")})"
"0","print(gbm_model)"
"1","Stochastic Gradient Boosting"
"1"," "
"1","

"
"1","553"
"1",""
"1"," samples"
"1","
"
"1"," 12"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","  2"
"1"," "
"1","classes:"
"1"," "
"1","'-', '+'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","498, 499, 497, 497, 497, 498, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  interaction.depth"
"1","  n.trees"
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","  1                "
"1","   50    "
"1","  0.8553487"
"1","  0.7109272"
"1","
"
"1","  1                "
"1","  100    "
"1","  0.8536616"
"1","  0.7052645"
"1","
"
"1","  1                "
"1","  150    "
"1","  0.8553487"
"1","  0.7087056"
"1","
"
"1","  1                "
"1","  200    "
"1","  0.8589202"
"1","  0.7154525"
"1","
"
"1","  1                "
"1","  250    "
"1","  0.8446020"
"1","  0.6860725"
"1","
"
"1","  2                "
"1","   50    "
"1","  0.8573329"
"1","  0.7120750"
"1","
"
"1","  2                "
"1","  100    "
"1","  0.8589875"
"1","  0.7159611"
"1","
"
"1","  2                "
"1","  150    "
"1","  0.8571681"
"1","  0.7127502"
"1","
"
"1","  2                "
"1","  200    "
"1","  0.8554485"
"1","  0.7088853"
"1","
"
"1","  2                "
"1","  250    "
"1","  0.8609355"
"1","  0.7198301"
"1","
"
"1","  3                "
"1","   50    "
"1","  0.8645731"
"1","  0.7268699"
"1","
"
"1","  3                "
"1","  100    "
"1","  0.8699303"
"1","  0.7376420"
"1","
"
"1","  3                "
"1","  150    "
"1","  0.8626563"
"1","  0.7234425"
"1","
"
"1","  3                "
"1","  200    "
"1","  0.8643759"
"1","  0.7270921"
"1","
"
"1","  3                "
"1","  250    "
"1","  0.8626227"
"1","  0.7234875"
"1","
"
"1","  4                "
"1","   50    "
"1","  0.8681445"
"1","  0.7335792"
"1","
"
"1","  4                "
"1","  100    "
"1","  0.8645070"
"1","  0.7260592"
"1","
"
"1","  4                "
"1","  150    "
"1","  0.8590849"
"1","  0.7149257"
"1","
"
"1","  4                "
"1","  200    "
"1","  0.8645731"
"1","  0.7267865"
"1","
"
"1","  4                "
"1","  250    "
"1","  0.8682756"
"1","  0.7333523"
"1","
"
"1","  5                "
"1","   50    "
"1","  0.8680459"
"1","  0.7336365"
"1","
"
"1","  5                "
"1","  100    "
"1","  0.8572342"
"1","  0.7118652"
"1","
"
"1","  5                "
"1","  150    "
"1","  0.8590849"
"1","  0.7156324"
"1","
"
"1","  5                "
"1","  200    "
"1","  0.8644408"
"1","  0.7253834"
"1","
"
"1","  5                "
"1","  250    "
"1","  0.8590849"
"1","  0.7142683"
"1","
"
"1","
"
"1","Tuning parameter 'shrinkage' was held constant at a value of 0.1
Tuning parameter 'n.minobsinnode' was
 held constant at a value of 10"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final values used for the model were n.trees = 100, interaction.depth = 3, shrinkage = 0.1
 and n.minobsinnode = 10."
"1","
"
"0","gbm_predictions <- predict(gbm_model, newdata = credit.Datos.Test.gbm)"
"0",""
"0","confusionMatrix(gbm_predictions, credit.Datos.Test.gbm$V16)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","  -"
"1","  +"
"1","
         -"
"1"," 63"
"1","  5"
"1","
         +"
"1"," 13"
"1"," 56"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.8686          "
"1","
"
"1","                 95% CI :"
"1"," (0.8003, 0.9202)"
"1","
"
"1","    No Information Rate :"
"1"," 0.5547          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 2.871e-15       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.7374          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.09896         "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.8289          "
"1","
"
"1","            Specificity :"
"1"," 0.9180          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9265          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.8116          "
"1","
"
"1","             Prevalence :"
"1"," 0.5547          "
"1","
"
"1","         Detection Rate :"
"1"," 0.4599          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.4964          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.8735          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," -               "
"1","
"
"1","                         "
"1","                 "
"1","
"
