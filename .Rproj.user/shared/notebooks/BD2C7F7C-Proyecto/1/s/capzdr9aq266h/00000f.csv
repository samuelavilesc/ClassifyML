"0","print(gbm_model_original)"
"1","Stochastic Gradient Boosting"
"1"," "
"1","

"
"1","553"
"1",""
"1"," samples"
"1","
"
"1"," 15"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","  2"
"1"," "
"1","classes:"
"1"," "
"1","'-', '+'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","498, 499, 497, 497, 497, 498, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  interaction.depth"
"1","  n.trees"
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","  1                "
"1","   50    "
"1","  0.8572006"
"1","  0.7142332"
"1","
"
"1","  1                "
"1","  100    "
"1","  0.8537602"
"1","  0.7049062"
"1","
"
"1","  1                "
"1","  150    "
"1","  0.8572655"
"1","  0.7118742"
"1","
"
"1","  1                "
"1","  200    "
"1","  0.8610005"
"1","  0.7184316"
"1","
"
"1","  1                "
"1","  250    "
"1","  0.8555459"
"1","  0.7077638"
"1","
"
"1","  2                "
"1","   50    "
"1","  0.8519420"
"1","  0.7012354"
"1","
"
"1","  2                "
"1","  100    "
"1","  0.8644420"
"1","  0.7261871"
"1","
"
"1","  2                "
"1","  150    "
"1","  0.8609692"
"1","  0.7196345"
"1","
"
"1","  2                "
"1","  200    "
"1","  0.8627537"
"1","  0.7223531"
"1","
"
"1","  2                "
"1","  250    "
"1","  0.8627874"
"1","  0.7223427"
"1","
"
"1","  3                "
"1","   50    "
"1","  0.8699615"
"1","  0.7376368"
"1","
"
"1","  3                "
"1","  100    "
"1","  0.8753187"
"1","  0.7478220"
"1","
"
"1","  3                "
"1","  150    "
"1","  0.8626551"
"1","  0.7225905"
"1","
"
"1","  3                "
"1","  200    "
"1","  0.8572330"
"1","  0.7116242"
"1","
"
"1","  3                "
"1","  250    "
"1","  0.8644084"
"1","  0.7261353"
"1","
"
"1","  4                "
"1","   50    "
"1","  0.8680447"
"1","  0.7339218"
"1","
"
"1","  4                "
"1","  100    "
"1","  0.8501239"
"1","  0.6970747"
"1","
"
"1","  4                "
"1","  150    "
"1","  0.8537278"
"1","  0.7038425"
"1","
"
"1","  4                "
"1","  200    "
"1","  0.8555471"
"1","  0.7075658"
"1","
"
"1","  4                "
"1","  250    "
"1","  0.8627874"
"1","  0.7223940"
"1","
"
"1","  5                "
"1","   50    "
"1","  0.8626563"
"1","  0.7225478"
"1","
"
"1","  5                "
"1","  100    "
"1","  0.8644745"
"1","  0.7260066"
"1","
"
"1","  5                "
"1","  150    "
"1","  0.8698966"
"1","  0.7367459"
"1","
"
"1","  5                "
"1","  200    "
"1","  0.8662602"
"1","  0.7287644"
"1","
"
"1","  5                "
"1","  250    "
"1","  0.8680784"
"1","  0.7330831"
"1","
"
"1","
"
"1","Tuning parameter 'shrinkage' was held constant at a value of 0.1
Tuning parameter 'n.minobsinnode' was
 held constant at a value of 10"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final values used for the model were n.trees = 100, interaction.depth = 3, shrinkage = 0.1
 and n.minobsinnode = 10."
"1","
"
"0","# Realizar predicciones en el conjunto de prueba"
"0","gbm_predictions <- predict(gbm_model_original, newdata = credit.Datos.Test.Normalizados)"
"0",""
"0","# Calcular la matriz de confusiÃ³n"
"0","confusionMatrix(gbm_predictions, credit.Datos.Test.Normalizados$V16)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","  -"
"1","  +"
"1","
         -"
"1"," 60"
"1","  5"
"1","
         +"
"1"," 16"
"1"," 56"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.8467          "
"1","
"
"1","                 95% CI :"
"1"," (0.7753, 0.9025)"
"1","
"
"1","    No Information Rate :"
"1"," 0.5547          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 3.197e-13       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.6951          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.0291          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.7895          "
"1","
"
"1","            Specificity :"
"1"," 0.9180          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9231          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.7778          "
"1","
"
"1","             Prevalence :"
"1"," 0.5547          "
"1","
"
"1","         Detection Rate :"
"1"," 0.4380          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.4745          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.8538          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," -               "
"1","
"
"1","                         "
"1","                 "
"1","
"
